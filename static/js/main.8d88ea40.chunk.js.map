{"version":3,"sources":["components/LoadingDisplay.module.css","components/resources/stem_up/eighth_note.svg","components/resources/stem_up/quarter_note.svg","components/resources/stem_up/half_note.svg","components/resources/whole_note.svg","scripts/MobileDetect.js","components/SheetMusic.js","scripts/PlayJSON.js","components/PlayButton.js","components/LoadingDisplay.js","pages/MainPage.js","constants.js","pages/UnsupportedDevicePage.js","pages/StartPage.js","pages/ComparePage.js","scripts/RouterHelper.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","submsgAnimation","topFadeIn","msgAnimation","fadeIn","__webpack_require__","p","isMobile","window","innerHeight","innerWidth","navigator","MaxTouchPoints","msMaxTouchPoints","SheetMusic","state","hovernote","getHoverArray","_this","props","notes","concat","Object","toConsumableArray","relative_value","duration","selectedDuration","_this2","this","svg","Snap","keyId","toString","load","eighth_note","e","quarter_note","q","half_note","h","whole_note","w","clear","note_shapes","select","rect","width","height","attr","fill","stroke","strokeWidth","drawLine","editable","i","drawBoundingBox","drawNotes","lo_shape","lo_notes","has_hovernote","_this3","num","forEach","note","key","arr","is","length","drawNote","no","is_hovernote","arguments","undefined","x","lineHeight","y","C_position","shapey","clone","transform","pointerEvents","append","comparison","correct","drawLedgerLines","line","calculateLineHeight","marginX","noteval","_this4","bb","g","group","mousedown","addNote","mouseover","setState","mouseout","svgRender","idKey","react_default","a","createElement","className","style","id","React","Component","defaultProps","PlayJSON","callback","synth","Tone","Synth","toMaster","Transport","stop","cancel","triggerSynth","time","triggerAttackRelease","noteToString","currentTime","scheduleOnce","parseFloat","Time","JSONtoAudio","start","-7","-6","-5","-4","-3","-2","-1","0","1","2","3","4","5","6","7","PlayButton","playing","play","emitStop","music","emit","listener","addListener","playOnLoad","onClick","EmitPlayButton","Emitter","loadList","LoadingDisplay","_useState","useState","_useState2","slicedToArray","current","setCurrent","_useState3","_useState4","message","setMessage","_useState5","_useState6","submessage","setSubmessage","useEffect","interval","setInterval","submsgTimer","setTimeout","_","msgTimer","clearInterval","clearTimeout","MainPage","loading","first_time","redirect","actual_song","user_song","selected_duration","undo","slice","setDuration","submit","setPost","user","actual","axios","get","then","response","JSON","parse","data","songdata","localStorage","getItem","setItem","react_router","to","components_LoadingDisplay","components_SheetMusic","UnsupportedDevicePage","StartPage","react_router_dom","ComparePage","redirect_home","redirect_main","corrected_song","handlePlayAgain","handleBackToStart","getAmtCorrect","filter","getTotal","getPct","Math","floor","hasPost","post","popPost","json","corrected","console","log","catch","error","PropsRoute","_ref","component","rest","objectWithoutProperties","assign","render","routeProps","_len","Array","_key","finalProps","apply","renderMergedProps","App","post_object","has_post","song","tmp","pages_UnsupportedDevicePage","basename","process","exact","path","RouterHelper","EmitterApp","App_App","EmitterProvider","Boolean","location","hostname","match","src_App","document","querySelector","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8d88ea40.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"submsgAnimation\":\"LoadingDisplay_submsgAnimation__2Sjsr\",\"topFadeIn\":\"LoadingDisplay_topFadeIn__2pbvn\",\"msgAnimation\":\"LoadingDisplay_msgAnimation__2of1N\",\"fadeIn\":\"LoadingDisplay_fadeIn__2696C\"};","module.exports = __webpack_public_path__ + \"static/media/eighth_note.04892710.svg\";","module.exports = __webpack_public_path__ + \"static/media/quarter_note.aaec5659.svg\";","module.exports = __webpack_public_path__ + \"static/media/half_note.f0263bb6.svg\";","module.exports = __webpack_public_path__ + \"static/media/whole_note.f4f20522.svg\";","// This script detects if the user is using a mobile device\nexport function isMobile() {\n  return window.innerHeight > window.innerWidth && isTouchscreen();\n}\n\nexport function isTouchscreen() {\n  return (\n    \"ontouchstart\" in window ||\n    navigator.MaxTouchPoints > 0 ||\n    navigator.msMaxTouchPoints > 0\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Snap from \"snapsvg-cjs\";\n\nimport eighth_note from \"./resources/stem_up/eighth_note.svg\";\nimport quarter_note from \"./resources/stem_up/quarter_note.svg\";\nimport half_note from \"./resources/stem_up/half_note.svg\";\nimport whole_note from \"./resources/whole_note.svg\";\n\n// This component contains the SVG view for the sheet music\nclass SheetMusic extends React.Component {\n  state = {\n    hovernote: null\n  };\n\n  svgRender() {\n    let svg = Snap(\"#svg\" + this.props.keyId.toString());\n    // NOTE: This method seems kind of clunky...\n    Snap.load(eighth_note, e => {\n      Snap.load(quarter_note, q => {\n        Snap.load(half_note, h => {\n          Snap.load(whole_note, w => {\n            svg.clear();\n            let eg = e.select(\"g\");\n            let qg = q.select(\"g\");\n            let hg = h.select(\"g\");\n            let wg = w.select(\"g\");\n            const note_shapes = [eg, qg, hg, wg];\n            svg.rect(0, 0, this.props.width, this.props.height).attr({\n              fill: \"#FFF\",\n              stroke: \"#000\",\n              strokeWidth: \"5\"\n            });\n            this.drawLine(0, svg);\n            this.drawLine(1, svg);\n            this.drawLine(2, svg);\n            this.drawLine(3, svg);\n            this.drawLine(4, svg);\n            if (this.props.editable) {\n              for (var i = -7; i <= 7; i++) {\n                this.drawBoundingBox(1.25 + i * -0.5, i, svg);\n              }\n            }\n            this.drawNotes(\n              svg,\n              note_shapes,\n              this.getHoverArray(),\n              !(this.state.hovernote === null)\n            );\n          });\n        });\n      });\n    });\n  }\n\n  // Appends the hover note to the array if one exists\n  getHoverArray = () => {\n    if (this.state.hovernote === null) {\n      return this.props.notes;\n    } else {\n      return [\n        ...this.props.notes,\n        {\n          relative_value: this.state.hovernote,\n          duration: this.props.selectedDuration\n        }\n      ];\n    }\n  };\n\n  // Draws all the notes onto the lines\n  drawNotes(svg, lo_shape, lo_notes, has_hovernote) {\n    var num = 0;\n    lo_notes.forEach((note, key, arr) => {\n      if (has_hovernote && Object.is(arr.length - 1, key)) {\n        // execute last item logic\n        this.drawNote(svg, lo_shape, num, note, true);\n      } else {\n        this.drawNote(svg, lo_shape, num, note);\n        num += 1;\n      }\n    });\n  }\n\n  // Draws a note onto the page given a position and a duration\n  drawNote(svg, lo_shape, no, note, is_hovernote = false) {\n    const x = 100 + no * this.lineHeight() * 2;\n    const y = this.C_position() - note.relative_value * (this.lineHeight() / 2);\n    var shapey = null;\n    switch (note.duration) {\n      case 0.125:\n        shapey = lo_shape[0].clone();\n        break;\n      case 0.25:\n        shapey = lo_shape[1].clone();\n        break;\n      case 0.5:\n        shapey = lo_shape[2].clone();\n        break;\n      case 1:\n        shapey = lo_shape[3].clone();\n        break;\n      default:\n        break;\n    }\n    shapey.attr({\n      transform: `translate(${x}, ${y})`,\n      pointerEvents: \"none\"\n    });\n    if (is_hovernote) {\n      shapey.attr({\n        fill: \"#919998\",\n        stroke: \"#999\"\n      });\n    } else {\n      shapey.attr({\n        fill: \"#000\",\n        stroke: \"#000\"\n      });\n    }\n    svg.append(shapey);\n    if (this.props.comparison) {\n      svg.rect(x, 30, 12, 12).attr({\n        fill: note.correct ? \"#4ED81A\" : \"#FF336E\",\n        stroke: note.correct ? \"#44b81a\" : \"#d62255\",\n        strokeWidth: 2\n      });\n    }\n    this.drawLedgerLines(svg, no, note);\n  }\n\n  //TODO: this can be abstracted.\n  // Draws the ledger lines depending on the value of the note\n  drawLedgerLines(svg, no, note) {\n    const x = 100 + no * this.lineHeight() * 2;\n    if (note.relative_value < -6) {\n      svg\n        .line(\n          x - 15,\n          this.calculateLineHeight(5),\n          x + 15,\n          this.calculateLineHeight(5)\n        )\n        .attr({\n          stroke: \"#000\",\n          strokeWidth: \"2\"\n        });\n    }\n    if (note.relative_value > 4) {\n      svg\n        .line(\n          x - 15,\n          this.calculateLineHeight(-1),\n          x + 15,\n          this.calculateLineHeight(-1)\n        )\n        .attr({\n          stroke: \"#000\",\n          strokeWidth: \"2\"\n        });\n    }\n    if (note.relative_value > 6) {\n      svg\n        .line(\n          x - 15,\n          this.calculateLineHeight(-2),\n          x + 15,\n          this.calculateLineHeight(-2)\n        )\n        .attr({\n          stroke: \"#000\",\n          strokeWidth: \"2\"\n        });\n    }\n  }\n\n  // Draws the lines representing the lines of the sheet music\n  drawLine(no, svg) {\n    svg\n      .line(\n        this.props.marginX,\n        this.calculateLineHeight(no),\n        this.props.width - this.props.marginX,\n        this.calculateLineHeight(no)\n      )\n      .attr({\n        stroke: \"#000\",\n        strokeWidth: \"2\"\n      });\n  }\n\n  // Draws the bounding boxes for placing notes\n  drawBoundingBox(no, noteval, svg) {\n    const bb = svg\n      .rect(\n        this.props.marginX + this.props.notes.length * this.lineHeight() * 2,\n        this.calculateLineHeight(no),\n        this.props.width - this.props.marginX * 2,\n        this.lineHeight() / 2\n      )\n      .attr({\n        fill: \"rgba(50,50,50,.0)\"\n      });\n    const g = svg.group(bb);\n    g.mousedown(() => {\n      this.props.addNote(noteval);\n    });\n    g.mouseover(() => {\n      this.setState({ hovernote: noteval });\n    }).mouseout(() => {\n      this.setState({ hovernote: null });\n    });\n  }\n\n  // The height or distance between each line on the sheet music\n  lineHeight() {\n    return this.props.height / 20;\n  }\n\n  // The absolute position of an individual line\n  calculateLineHeight(no) {\n    return no * this.lineHeight() + this.props.height / 2.75;\n  }\n\n  // The position of the C note\n  C_position() {\n    return this.calculateLineHeight(3) - (3 * this.lineHeight()) / 2;\n  }\n\n  componentDidMount() {\n    this.svgRender();\n  }\n\n  componentDidUpdate() {\n    this.svgRender();\n  }\n\n  render() {\n    const idKey = \"svg\" + this.props.keyId.toString();\n    return (\n      <svg\n        className=\"sheetmusic\"\n        style={this.props.style}\n        width={this.props.width}\n        height={this.props.height}\n        id={idKey}\n      />\n    );\n  }\n}\n\nSheetMusic.propTypes = {\n  keyId: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  marginX: PropTypes.number,\n  notes: PropTypes.array.isRequired,\n  editable: PropTypes.bool,\n  comparison: PropTypes.bool,\n  addNote: (props, propName, componentName) => {\n    if (\n      props[\"editable\"] === true &&\n      (props[propName] === undefined || typeof props[propName] != \"function\")\n    ) {\n      return new Error(\"addNote is required if the sheet music is editable!\");\n    }\n  },\n  selectedDuration: (props, propName, componentName) => {\n    if (\n      props[\"editable\"] === true &&\n      (props[propName] === undefined || typeof props[propName] != \"number\")\n    ) {\n      return new Error(\n        \"The select duration is required if the sheet music is editable!\"\n      );\n    }\n  }\n};\n\nSheetMusic.defaultProps = {\n  marginX: 30,\n  editable: true,\n  comparison: false\n};\n\nexport default SheetMusic;\n","import Tone from \"tone\";\n\n// Takes in JSON representing a linear list of notes and plays them in order\nexport function PlayJSON(notes, callback = () => {}) {\n  var synth = new Tone.Synth().toMaster();\n  Tone.Transport.stop();\n  Tone.Transport.cancel();\n  JSONtoAudio(notes, synth, callback);\n  Tone.Transport.start();\n}\n\n// Stops the song from playing\nexport function StopJSON() {\n  Tone.Transport.stop();\n}\n\n// Converts the JSON into a series of Tone events\nfunction JSONtoAudio(notes, synth, callback) {\n  function triggerSynth(note) {\n    return time => synth.triggerAttackRelease(noteToString(note), \"8n\");\n  }\n  var currentTime = 0.0;\n  notes.forEach(note => {\n    Tone.Transport.scheduleOnce(\n      triggerSynth(note.relative_value),\n      parseFloat(currentTime * Tone.Time(\"1m\"))\n    );\n    currentTime += note.duration;\n  });\n  Tone.Transport.scheduleOnce(\n    callback,\n    parseFloat(currentTime * Tone.Time(\"1m\"))\n  );\n}\n\n// Converts a note to it's string representation\nfunction noteToString(note) {\n  return notes[note];\n}\n\n// The note dictionary\nlet notes = {\n  \"-7\": \"C4\",\n  \"-6\": \"D4\",\n  \"-5\": \"E4\",\n  \"-4\": \"F4\",\n  \"-3\": \"G4\",\n  \"-2\": \"A4\",\n  \"-1\": \"B4\",\n  0: \"C5\",\n  1: \"D5\",\n  2: \"E5\",\n  3: \"F5\",\n  4: \"G5\",\n  5: \"A5\",\n  6: \"B5\",\n  7: \"C6\"\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Emitter } from \"react-emitter\";\nimport { PlayJSON, StopJSON } from \"../scripts/PlayJSON\";\n\n// The component used to play audio with\n// This component uses Emitters as attempting to use a different PlayButton\n// will stop any PlayButtons currently in use\nclass PlayButton extends React.Component {\n  state = {\n    // Whether this button's song is currently playing\n    playing: false\n  };\n\n  componentDidMount() {\n    // Adds a listener for the 'stop' event, which when triggered pauses all other songs\n    this.listener = this.props.addListener(\"stop\", () => {\n      this.setState({\n        playing: false\n      });\n    });\n    if (this.props.playOnLoad) {\n      this.play();\n    }\n  }\n\n  // Plays the song\n  play = () => {\n    this.emitStop();\n    this.setState({\n      playing: true\n    });\n    PlayJSON(this.props.music, () => {\n      this.emitStop();\n    });\n  };\n\n  // Stops the current song\n  stop = () => {\n    this.emitStop();\n    StopJSON();\n  };\n\n  // Sends a signal to stop all other buttons\n  emitStop = () => {\n    this.props.emit(\"stop\");\n  };\n\n  render() {\n    return (\n      <button\n        className=\"red\"\n        onClick={this.state.playing ? this.stop : this.play}\n      >\n        {this.state.playing ? \"Pause\" : \"Play\"}\n      </button>\n    );\n  }\n}\n\nPlayButton.propTypes = {\n  music: PropTypes.arrayOf(PropTypes.object).isRequired,\n  playOnLoad: PropTypes.bool\n};\n\nPlayButton.defaultProps = {\n  playOnLoad: false\n};\n\nexport const EmitPlayButton = Emitter(PlayButton);\n\nexport default Emitter(PlayButton);\n","import React, {useState, useEffect} from \"react\";\nimport style from \"./LoadingDisplay.module.css\"\n// Used for the loading text animation\nconst loadList = {\n      0: \"Loading\",\n      1: \"Loading.\",\n      2: \"Loading..\",\n      3: \"Loading...\"\n}\n\n// Draws the component shown to the user while waiting for the page to load\nconst LoadingDisplay = () => {\n  const [current, setCurrent] = useState(0);\n  const [message, setMessage] = useState(false);\n  const [submessage, setSubmessage] = useState(false);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrent(current => (current + 1) % 4)\n    }, 600);\n    const submsgTimer = setTimeout(() =>\n    setSubmessage(_ => true), 4000);\n    const msgTimer = setTimeout(() =>\n    setMessage(_ => true), 1000);\n    return () => {\n      clearInterval(interval);\n      clearTimeout(msgTimer);\n      clearTimeout(submsgTimer);\n    };\n  }, []);\n\n  return (\n    <div className=\"d-flex flex-column h-100 justify-content-center\">\n    {message && <h2 className={`w-100 text-center ${style.msgAnimation}`}>{loadList[current]}</h2>}\n    {submessage ? ( <p className={`text-center text-muted ${style.submsgAnimation}`}>The Heroku servers are warming up!</p> ) :\n    (<p>&nbsp;</p>)}\n    </div>\n  )\n}\n\nexport default LoadingDisplay;\n","import React from \"react\";\nimport Tone from \"tone\";\nimport axios from \"axios\";\n\nimport {BACKEND_URL} from \"../constants\"\nimport SheetMusic from \"../components/SheetMusic\";\nimport {Redirect} from \"react-router-dom\";\nimport {EmitPlayButton} from \"../components/PlayButton\"\nimport LoadingDisplay from \"../components/LoadingDisplay\"\n\n// The main page where the user listens to the song and attempts to transcribe it.\nclass MainPage extends React.Component {\n  /*\n    loading: whether the data is still being fetched from the server\n    first_time: whether this is the first time the user has used this page\n    redirect: whether the page should redirect to comparison\n    actual_song: the song that the user is transcribing\n    user_song: the user's inputted song\n    selected_duration: what the currently selected note duration is\n  */\n  state = {\n    loading: true,\n    first_time: false,\n    redirect: false,\n    actual_song: [],\n    user_song: [],\n    selected_duration: 0.25\n  };\n\n  // calls the python API\n  componentDidMount() {\n    axios.get(`${BACKEND_URL}/api/get`)\n      .then(response => {\n        return JSON.parse(response.data)\n      })\n      .then(songdata => {\n        this.setState({\n          actual_song: songdata.notes,\n          user_song: [songdata.notes[0]],\n          loading: false\n        });\n      });\n      if(localStorage.getItem(\"first_time\") === null) {\n        localStorage.setItem(\"first_time\", false)\n        this.setState({\n          first_time: true\n        })\n      }\n  }\n\n  // Adds the note to the user_song state given the relative_value supplied by\n  // SheetMusic and the preselected duration\n  addNote = noteval => {\n    this.setState({\n      user_song: this.state.user_song.concat({\n        relative_value: noteval,\n        duration: this.state.selected_duration\n      })\n    });\n  };\n\n  // Removes the last element added\n  undo = () => {\n    this.setState({\n      user_song: this.state.user_song.slice(0, -1)\n    });\n  };\n\n  // Sets the duration\n  setDuration = duration => {\n    this.setState({\n      selected_duration: duration\n    });\n  };\n\n  // Sets the post data and then redirects the user to the comparison page\n  submit = () => {\n    this.props.setPost({\n      user: this.state.user_song,\n      actual: this.state.actual_song\n    });\n    this.setState({\n      redirect: true\n    });\n    Tone.Transport.stop();\n  };\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to=\"/compare\" />;\n    }\n    if (this.state.loading) {\n      return <LoadingDisplay/>;\n    }\n    return (\n      <div className=\"pt-3\">\n        <div className=\"d-flex flex-row align-items-center justify-content-between mt-3 mb-2\">\n          <h2 className=\"font-weight-bold m-0\">Transcriboid</h2>\n          <div className=\"d-flex align-items-end\">\n            {this.state.first_time && <p className=\"my-0 mx-2 text-muted font-weight-bold\">click here to play the song.</p>}\n            <EmitPlayButton music={this.state.actual_song} />\n          </div>\n        </div>\n        <SheetMusic\n          keyId={1}\n          width={window.innerWidth - 10 * 2}\n          height={window.innerHeight / 2}\n          marginX={40}\n          addNote={this.addNote}\n          notes={this.state.user_song}\n          selectedDuration={this.state.selected_duration}\n        />\n      <div className=\"d-flex flex-row align-items-center justify-content-between my-2\">\n          <div>\n            <button className=\"medium thin\" onClick={() => this.setDuration(0.125)}>Eighth</button>\n            <button className=\"medium thin\" onClick={() => this.setDuration(0.25)}>Quarter</button>\n            <button className=\"medium thin\" onClick={() => this.setDuration(0.5)}>Half</button>\n            <button className=\"medium thin\" onClick={() => this.setDuration(1)}>Whole</button>\n          </div>\n          <div>\n            <button className=\"medium thin red\" onClick={this.undo}>\n              Undo\n            </button>\n            <button className=\"medium thin red\" onClick={this.submit}>\n              Submit\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MainPage;\n","export const BACKEND_URL = \"http://178.128.145.15:5000\"\n","import React from \"react\";\n\n// Displays when a device that is unsupported tries to access the website (mobile)\nclass UnsupportedDevicePage extends React.Component {\n  render() {\n    return (\n      <div className=\"d-flex flex-column justify-content-around h-100\">\n          <p className=\"text-center\">Sorry, mobile devices are not supported!</p>\n      </div>\n    );\n  }\n}\n\nexport default UnsupportedDevicePage;\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nimport \"./Page.css\";\n\n// The initial page that the user sees when they load the website\nclass StartPage extends React.Component {\n  render() {\n    return (\n      <div className=\"d-flex flex-column justify-content-around align-items-center h-100\">\n          <div>\n          <h1 className=\"display-2 font-weight-bold\">Transcriboid</h1>\n          <p className=\"m-0 text-center font-weight-bold text-muted\">A randomly generated transcription trainer.</p>\n          </div>\n          <Link to=\"/main\">\n            <button className=\"large\">Start</button>\n          </Link>\n        <p className=\"m-3 fixed-bottom text-right\">Made by Ethan Leba, 2019</p>\n      </div>\n    );\n  }\n}\n\nexport default StartPage;\n","import React from \"react\";\nimport Tone from \"tone\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nimport {BACKEND_URL} from \"../constants\"\nimport SheetMusic from \"../components/SheetMusic\";\nimport { EmitPlayButton } from \"../components/PlayButton\";\n\n// The page where the user sees the comparison between their input and the actual song\nclass ComparePage extends React.Component {\n  /*\n  loading: whether the page is still asking for data from the server or not\n  redirect_home: whether the page should prepare to redirect to the home page\n  redirect_main: whether the page should prepare to redirect to the main page\n  actual_song: the note data on the song generated by the site\n  corrected_song: the note data on the user input corrected\n  */\n  state = {\n    loading: true,\n    redirect_home: false,\n    redirect_main: false, // TODO: can be refactored out\n    actual_song: [],\n    corrected_song: []\n  };\n\n  componentDidMount() {\n    //Sends in the data to check if the user input is correct\n    if (!this.props.hasPost()) {\n      this.setState({\n        redirect_home: true\n      });\n    } else {\n      axios\n        .post(`${BACKEND_URL}/api/compare`, this.props.popPost())\n        .then(response => JSON.parse(response.data))\n        .then(json => {\n          this.setState({\n            actual_song: json.actual,\n            corrected_song: json.corrected,\n            loading: false\n          });\n          console.log(json);\n        })\n        .catch(function(error) {\n          console.log(error);\n        });\n    }\n  }\n\n  // -- REDIRECT HANDLERS --\n  // Redirects to main\n  handlePlayAgain = () => {\n    Tone.Transport.stop();\n    this.setState({\n      redirect_main: true\n    });\n  };\n\n  // Redirects home\n  handleBackToStart = () => {\n    Tone.Transport.stop();\n    this.setState({\n      redirect_home: true\n    });\n  };\n\n  // -- VIEW HELPERS --\n  // Returns the amount of notes correct that the user inputted\n  getAmtCorrect = () => {\n    return this.state.corrected_song.filter(note => note.correct).length;\n  };\n\n  // Returns the total number of notes\n  getTotal = () => {\n    return this.state.actual_song.length;\n  };\n\n  // Calculates the percentage of notes correct in the user's transcription\n  getPct = () => {\n    return Math.floor((this.getAmtCorrect() / this.getTotal()) * 100);\n  };\n\n  render() {\n    if (this.state.redirect_home) {\n      return <Redirect to=\"/\" />;\n    }\n    if (this.state.redirect_main) {\n      return <Redirect to=\"/main\" />;\n    }\n    if (this.state.loading) {\n      return null;\n    }\n    return (\n      <div className=\"h-100 row align-items-center\">\n        <div className=\"col\">\n          <div className=\"d-flex flex-row align-items-center justify-content-between my-2\">\n            <h3 className=\"m-0 font-weight-bold\">Actual Transcription</h3>\n            <EmitPlayButton music={this.state.actual_song} />\n          </div>\n          <SheetMusic\n            keyId={1}\n            width={window.innerWidth - 10 * 2}\n            height={window.innerHeight / 3}\n            notes={this.state.actual_song}\n            editable={false}\n          />\n          <div className=\"d-flex flex-row align-items-center justify-content-between my-2\">\n            <h3 className=\"m-0 font-weight-bold\">\n              Your Transcription ({this.getPct()}% correct)\n            </h3>\n            <EmitPlayButton music={this.state.corrected_song} />\n          </div>\n          <SheetMusic\n            keyId={2}\n            width={window.innerWidth - 10 * 2}\n            height={window.innerHeight / 3}\n            notes={this.state.corrected_song}\n            editable={false}\n            comparison={true}\n          />\n          <div className=\"d-flex flex-row align-items-center justify-content-center my-2\">\n            <button className=\"medium\" onClick={this.handleBackToStart}>\n              Quit\n            </button>\n            <button className=\"medium red\" onClick={this.handlePlayAgain}>\n              Try again\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ComparePage;\n","import React from 'react'\nimport { Route } from 'react-router-dom'\n\nconst renderMergedProps = (component, ...rest) => {\n  const finalProps = Object.assign({}, ...rest);\n  return (\n    React.createElement(component, finalProps)\n  );\n}\n\nconst PropsRoute = ({ component, ...rest }) => {\n  return (\n    <Route {...rest} render={routeProps => {\n      return renderMergedProps(component, routeProps, rest);\n    }}/>\n  );\n}\n\nexport default PropsRoute\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { EmitterProvider, Emitter } from \"react-emitter\";\n\nimport { isMobile } from \"./scripts/MobileDetect.js\";\n\nimport MainPage from \"./pages/MainPage.js\";\nimport UnsupportedDevicePage from \"./pages/UnsupportedDevicePage.js\";\nimport StartPage from \"./pages/StartPage.js\";\nimport ComparePage from \"./pages/ComparePage.js\";\nimport PropsRoute from \"./scripts/RouterHelper\";\n\n// The container for the entire application\nclass App extends React.Component {\n  state = {\n    // Contains the song data\n    post_object: [],\n    // Whether there is song data available to be sent\n    has_post: false\n  };\n\n  // Sets the JSON to be posted in the compare page\n  setPost = song => {\n    this.setState({\n      post_object: song,\n      has_post: true\n    });\n  };\n\n  // Returns the post object and then clears it from the state\n  popPost = () => {\n    const tmp = this.state.post_object;\n    this.setState({\n      post_object: [],\n      has_post: false\n    });\n    return tmp;\n  };\n\n  // Checks if there is data available to be popped\n  hasPost = () => {\n    return this.state.has_post;\n  };\n\n  render() {\n    if (isMobile()) {\n      return <UnsupportedDevicePage />;\n    }\n    return (\n      <Switch basename={process.env.PUBLIC_URL}>\n        <Route exact path=\"/\" component={StartPage} />\n        <PropsRoute path=\"/main\" component={MainPage} setPost={this.setPost} />\n        <PropsRoute\n          path=\"/compare\"\n          component={ComparePage}\n          popPost={this.popPost}\n          hasPost={this.hasPost}\n        />\n       <Route component={() => (<div>404 Not found </div>)} />\n      </Switch>\n    );\n  }\n}\n\nconst EmitterApp = Emitter(({ emit }) => {\n  return <App />;\n});\n\nexport default EmitterProvider(EmitterApp);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport EmitterApp from './App';\nimport * as serviceWorker from './serviceWorker';\n\nrender (\n    <BrowserRouter>\n      <EmitterApp />\n    </BrowserRouter>,\n    document.querySelector('#root')\n    )\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}